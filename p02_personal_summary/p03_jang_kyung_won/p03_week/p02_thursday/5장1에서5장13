# 5.1 텍스트 데이터 읽고 쓰기
with open('sample.txt','rt') as f:
    data = f.read()
    print(data)
# 파일 전체를 하나의 문자열로 읽는다.
with open('sample.txt','rt') as f:
    for line in f:
        print(line)
# 파일의 줄을 순환

# 텍스트 파일을 쓸때는 wt를 쓴다.
with open('somefile.txt', 'wt') as f:
    f.write('text1')
# 파일이 없다면 생성해서 쓰고 있다면 새로운 내용을 덮어쓴다.


# 5.2 파일에 출력
with open('sample.txt', 'rt') as f:
    print('Hello World' ,file = f)

# 5.3 구별자나 종단 부호 바꾸기
print('ACME', 50, 91.5)
# ACME 50 91.5
print('ACME', 50, 91.5, sep=',')   # 구분자를 ,로 한다.
# ACME,50,91.5
print('ACME', 50, 91.5, sep=',', end='!!\n') # 구분자를 ,로 하고 마지막에 !!와 엔터를 입력하여 출력한다.
# ACME,50,91.5!!

for i in range(5):
    print(i)         # 하나 출력하고 엔터치고 출력한다.

for i in range(5):
    print(i , end =' ')   # 0 1 2 3 4 로 공백을 하나 넣어서 출력한다.
acme = ('ACME','50','91.5')
print(','.join(acme))  # join은 문자로만 가능하다. 숫자도 같이 하려면 변형이 필요하다.
acme1 = ('ACME',50,91.5)
print(','.join(str(x) for x in acme1))   # 이렇게 문자로 변환하여 출력하면 가능하다.
print(*acme ,sep=',')                   # 구별자를 사용하면 훨씬 간단하다.

# 5.4 바이너리 데이터 읽고 쓰기
with open('data.bin', 'rb') as f:
    data = f.read()
    print(data)

# 5.5 존재하지 않는 파일에 쓰기
with open('somefile.txt', 'wt') as f:
    f.write('Hello\n')
with open('somefile.txt', 'xt') as f:   # xt로 쓰면 파일이 있다면 에러가 난다.
    f.write('Hello\n')

# 5.6 문자열에 입출력 작업하기
s = io.StringIO()
s.write('Hello World\n')
print('This is a test', file=s)
s.getvalue()
s = io.StringIO('Hello\nWorld\n')
s.read(4)
s.read()

# 5.7 압축된 데이터 파일 읽고 쓰기
# gzip으로 압축
import gzip
with gzip.open('somefile.gz', 'rt') as f:
    text = f.read()
# bz2f로 압축
import bz2
with bz2.open('somefile.bz2', 'rt') as f:
    text = f.read()

# 5.8 고정 크기 레코드 순환
from functools import partial
RECORD_SIZE = 32
with open('somefile.data', 'rb') as f:
records = iter(partial(f.read, RECORD_SIZE), b'')
for r in records:
    priont(r)

# 5.11 경로 다루기
import os
path = '/Users/beazley/Data/data.csv'
# 경로의 마지막 부분 구하기
print(os.path.basename(path))   # data.csv
# 디렉토리 이름 구하기
print(os.path.dirname(path)) # /Users/beazley/Data
#각 부분을 합치기
print(os.path.join('tmp', 'data', os.path.basename(path)))  # tmp\data\data.csv
# 사용자의 홈 디렉토리 펼치기
path1 = '~/Data/data.csv'
print(os.path.expanduser(path1))  # C:\Users\Gyeongwon/Data/data.csv
# 파일 확장자 나누기
print(os.path.splitext(path))  # ('/Users/beazley/Data/data', '.csv')

 # 5.12 파일 존재여부 확인
import os
# 디렉터리의 존재여부를 확인하기 위해서 os.path 모듈을 사용한다.
print(os.path.exists('/etc/passwd'))  # False
print(os.path.isfile('/etc/passwd')) # False

# 5.13 디렉터리 리스팅 구하기
import os
names = os.listdir('somedir')
import os.path
names = [name for name in os.listdir('somedir')
if os.path.isfile(os.path.join('somedir', name))]
dirnames = [name for name in os.listdir('somedir')
if os.path.isdir(os.path.join('somedir', name))]
pyfiles = [name for name in os.listdir('somedir')
if name.endswith('.py')]
import os.path
import glob
pyfiles = glob.glob('*.py')
name_sz_date = [(name, os.path.getsize(name), os.path.getmtime(name)) for name in pyfiles]
for name, size, mtime in name_sz_date:
    print(name, size, mtime)
Alternative: Get file metadata
file_metadata = [(name, os.stat(name)) for name in pyfiles]
for name, meta in file_metadata:
    print(name, meta.st_size, meta.st_mtime)

