#큰배열 계산
#문제 : 배열이나 그리드와 같이 커다란 숫자 데이터 셋에 계산을 해야 한다.
#해결 : 배열이 관련된 커다란 계산을 하려면 Numpy라이브러리를 사용한다.
x = [1,2,3,4]
y = [5,6,7,8]
x * 2
x + 10
x + y

import numpy as np
ax = np.array([1,2,3,4])
ay = np.array([5,6,7,8])
ax * 2
ax + ay
ax * ay
def f(x):
    return 3*x**2 - 2*x + 7
f(ax)
#array([8,15,28,47])
#넘파이는 배열에 사용 가능한 일반 함수를 제공한다. math와 비슷
np.sqrt(ax)
np.cos(ax)
#일반함수는 배열 요소를 순환하며 요소마다 math 모듈 함수로 계산하는 것 보다 수백배 빠르다. 가능하면 일반 함수를 사용하자.
grid = np.zeros(shape = (10000,10000), dtype = float)
grid
#모든 연산은 동일하게 적용
grid+=10
np.sin(grid)
#넘파이가 파이썬의 리스트, 그 중에서도 다차원 배열의 인덱싱 기능을 확장하고 있다는 점을 특히 주목해야 한다. 간단한 2차원 배열을 만들고 몇가지 예를 들어보자.
a = np.array([[1,2,3,4],
              [5,6,7,8],
              [9,10,11,12]])
a
a[1] #1행
a[:,1]#첫번째 열 (0부터 시작)
a[1:3, 1:3]
a[1:3, 1:3] += 10
a
a + [100,101,102,103] #행 벡터를 모든 행 연산에 적용
np.where(a<10,a,10)

