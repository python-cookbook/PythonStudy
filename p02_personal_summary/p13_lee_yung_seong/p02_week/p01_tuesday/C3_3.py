#출력을 위한 숫자 서식화
#문제: 출력을 위해 자릿수, 정렬, 천 단위 구분 등 숫자를 서식화 하고 싶다.
#해결 출력을 위해 숫자를 서식화하려면 내장 함수인 format()을 사용한다.
x = 1234.56789
format(x,'0.2f')
format(x,'>10.1f') #소수점 한자리 정확도로 문자 10개 기준 오른쪽 정렬
format(x, '<10.1f')#왼쪽정렬
format(x,'^10.1f')#가운데 정렬
format(x ,',')#천단위 쉼표
format(x,'0,.1f')
format(x,'e')#지수표현법을 사용하려면 다음과 같이
format(x,'0.2E')
#너비와 자릿수를 나타내는 일반적인 형식은 '[<>^]?너비[,]?(.자릿수)?'이다. 이떄 너비와 자릿수는 정수형으로 표시하고
#?는 선택 사항임을 의미한다. .format() 메소드에도 동일한 서식을 사용한다.
'The value is {:0,.2f}'.format(x)
#토론 출력을 위한 숫자 서식화는 대게 간단하다. 앞에 소개한 기술은 부동 소수점 값과 decimal 모듈의 숫자에 모두 잘 동작한다.
#자릿수를 제한하면 round()함수와 동일한 규칙으로 반올림됨.
x
format(x,'0.1f')
format(-x,'0.1f')
#천단위 구분자는 지역 표기법을 따르지 않는다. 이를 염두에 둔다면 locale모듈의 함수를 사용해야 한다. 문자열의 translate()메소드를 사용하면 구분자 문자를 변경할 수도 있다.
swap_seperators = {ord('.'):',', ord(','):'.'}
format(x,',').translate(swap_seperators)
#많은 파이썬 코드에서 숫자를 %연산자로 서식화 한다.
'%0.2f' % x
'%10.1f' % x
'%-10.1f' % x
#이 방식을 사용해도 괜찮지만 format()을 사용하는 것 만큼 기능이 많지는 않다. 천단위 구분자같은 경우 지원하지 않음.
