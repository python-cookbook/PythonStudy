##########################################################################################################
# 5.1] 텍스트 데이터 읽고 쓰기
#   * 텍스트 데이터를 읽거나 써야 하는데 ASCII, UTF-8, UTF-16과 같이 서로 다른 인코딩을 사용해야 한다.
#
# * 일반적으로 많이 쓰이는 인코딩
#   1. UTF-8 : 웹 애플리케이션에 안전한 형식
#   2. ASCII : U+0000 ~ U+007F 범위의 7비트 문자에 일치한다.
#   3. latin-1 : 0-255바이트를 유니코드 U+0000 ~ U+00FF에 매핑한다.
#                인코딩의 종류를 모르는 텍스트를 읽을 때 절대 에러가 발생하지 않는다 !
#                (완벽하게 올바른 텍스트 디코딩을 만들어내지는 못할 수 있지만, 여전히 유용한 데이터를 추출할 것이다.)
#
# * 주의할 점
#   1. with 문이 아닌 open을 사용할 시엔 반드시 close를 해야 한다.
#   2. UNIX와 Windows에서의 줄바꿈 문자가 다르다. (UNIX : \n, Windows : \r\n)
#      일반적으로 파이썬은 "보편적 줄바꿈(universal newline)" 모드로 동작한다.
#       => 일반적인 모든 줄바꿈을 알아보고, 읽을 때 모든 줄바꿈 문자를 \n으로 변환한다.
#          그리고 출력 시에는 줄바꿈 문자 \n를 시스템 기본 문자로 변환한다.
#          이런 자동 변환을 원하지 않을 때는 newline='' 인자를 open()에 넣어준다.
#   3. 인코딩 에러에 주의해야 한다.
#      텍스트 파일을 읽거나 쓸 때, 인코딩이나 디코딩 에러가 발생할 수 있다.(UnicodeDecodeError 등)
#      이 에러는 대개 잘못된 인코딩을 사용했을 때 발생한다.
#      이때는 읽으려는 파일의 스펙을 잘 읽어보고 인코딩을 올바르게 사용했는지 확인한다.
#      (Latin-1을 사용해야 하는데 UTF-8을 사용하지는 않았는지 등)
#      그래도 해결되지 않으면 open()에 errors 인자를 전달하여 에러를 처리한다.
#      단, 프로그래밍을 하면서 errors와 encoding 인자로 세세한 조율을 너무 많이 하고 있다면,
#       필요 이상으로 어려운 작업을 하고 있을 확률이 높다.
#       텍스트를 다룰 때엔 언제나 올바른 인코딩을 사용하는 것이 가장 중요하다는 것을 기억하자.
##########################################################################################################

## 읽기
# 파일 전체를 하나의 문자열로 읽음
with open('somefile.txt', 'rt') as f:
    data = f.read()
    
# 파일의 줄 순환 + 인코딩 인자 사용(기본 : utf-8)
with open('somefile.txt', 'rt', encoding='latin-1') as f:
    for line in f:
        pass
        # 라인 처리

# 줄바꿈 변환 없이 읽기
with open('s.txt', 'rt', newline='') as f:
    pass

## 인코딩 에러 방지를 위한 에러 처리
# 알 수 없는 문자를 유니코드 U+fffd로 치환
# 알 수 없는 문자를 무시 : errors='ignore'
f = open('s,txt', 'rt', encoding='ascii', errors='replace')
f.read()
f.close()



## 쓰기
# 텍스트 데이터 쓰기
with open('somefile.txt', 'wt'):
    f.write('abc')
    f.write('def')
    
# 리다이렉트한 print 문
with open('somefile.txt', 'wt') as f:
    print('a', file=f)
    print('b', file=f)